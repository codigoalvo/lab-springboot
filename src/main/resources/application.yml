# Spring properties
server:
  port: 8080
  servlet.context-path: /lab-springboot/

logging.level.br: TRACE

#flyway.baseline-on-migrate: true

spring:
  jackson.deserialization.fail-on-unknown-properties: true
  h2.console:
      enabled: true
      path: /h2
  jpa:
    show-sql: true
    properties.hibernate:
      ddl-auto: none
      jdbc.lob.non_contextual_creation: true


#spring.profiles.active: devh2memtcp
---

spring:
  profiles: devh2mem
  jpa.database-platform: org.hibernate.dialect.H2Dialect
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:lab
    datasource.username: sa
    datasource.password:
---

spring:
  profiles: devh2memtcp   #Precisa estar rodando o H2 como serviço TCP
  jpa.database-platform: org.hibernate.dialect.H2Dialect
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:tcp://localhost:9095/mem:lab
    datasource.username: sa
    datasource.password:
---

spring:
  profiles: devh2file   #Precisa estar rodando o H2 como serviço TCP
  jpa.database-platform: org.hibernate.dialect.H2Dialect
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:tcp://localhost:9095/file:~/lab.h2;DB_CLOSE_ON_EXIT=FALSE;IFEXISTS=TRUE;DB_CLOSE_DELAY=-1;
    username: sa
    password:
---

spring:
  profiles: devhpsql
  jpa:
    database: PostgreSQL
  datasource:
    url: jdbc:postgresql://localhost:5432/desenv?createDatabaseIfNotExist=true&useSSL=false
    username: postgres
    password: postgres
---

spring:
  profiles: herokumysql
  jpa:
    database: MYSQL
  datasource:
    url: {JDBC_DATABASE_URL}
    username: {JDBC_DATABASE_USERNAME}
    password: {JDBC_DATABASE_PASSWORD}
---

spring:
  profiles: herokupsql
  jpa:
    database: PostgreSQL
  datasource:
    url: jdbc:postgresql://ec2-54-221-215-228.compute-1.amazonaws.com:5432/dardgfv06gdklh
    username: pysjkbziqzpdjc
    password: 0c1a16d55947b613bbadfe38a66b2a35f18cc5ce30bb4ad93510e4a920a1b5f9
---
